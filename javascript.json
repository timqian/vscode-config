{
/*
	 // Place your snippets for JavaScript here. Each snippet is defined under a snippet name and has a prefix, body and 
	 // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	 // $1, $2 for tab stops, ${id} and ${id:label} and ${1:label} for variables. Variables with the same id are connected.
	 // Example:
	 "Print to console": {
		"prefix": "log",
		"body": [
			"console.log('$1')",
			"$2"
		],
		"description": "Log output to console"
	}
*/
  "import": {
    "prefix": "ipt",
    "body": "import $1 from '$1'$3",
    "description": "Imports entire module"
  },
  "importDestructing": {
    "prefix": "ipd",
    "body": "import { $1 } from '${2:module}'$3",
    "description": "Imports only a portion of the module"
  },
  "setInterval": {
    "prefix": "seti",
    "body": "setInterval(() => {\n\t${1:// body}\n}, ${2:ms})$3"
  },
  "setTimeOut": {
    "prefix": "sett",
    "body": "setTimeout(() => {\n\t${2:// body}\n}, ${1:ms})$3"
  },
  "consoleLog": {
    "prefix": "clg",
    "body": "console.log('${1:object}')$2"
  },
  "alert": {
    "prefix":"alt",
    "body":"alert('${1:msg}')$2"
  },
  "function": {
    "prefix": "fn",
    "body": "function ${1:funName} (${2:args}) {\n\t${3:// body...}\n}$4"
  },

  // functional programing
  "forEach": {
    "prefix": "fe",
    "body": "${1:array}.forEach(${2:currentItem} => {\n\t${3:// body}\n}$4)"
  },
  "map": {
    "prefix": "mp",
    "body": "${1:array}.map(${2:currentItem} => {\n\t${3:// body}\n}$4)"
  },
  "filter": {
    "prefix": "filt",
    "body": "${1:array}.filter(${2:currentItem} => {\n\t${3:// return true to choose}\n}$4)"
  },
  "reduce": {
    "prefix": "redu",
    "body": "${1:array}.reduce((${2:pre}, ${3:cur}) => {\n\t${4:// returned val become pre}\n}, ${0:init}$5)$6"
  },


  // BDD
  "describe": {
    "prefix": "desc",
    "body": "describe('${0:description}', ${1:async }() => {\n\t${2:// body...}\n})",
    "description": "Mocha BDD"
  },
  "it": {
    "prefix": "it",
    "body": "it('${0:description}', ${1:async }() {\n\t${2:// body...}\n})",
    "description": "Mocha BDD"
  }
}
